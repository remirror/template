(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{96:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(3),i=n(7),r=(n(0),n(105)),o={hide_title:!0,title:"Contributing"},c={unversionedId:"contributing",id:"contributing",isDocsHomePage:!1,title:"Contributing",description:"Contributing",source:"@site/../docs/contributing.md",slug:"/contributing",permalink:"/docs/contributing",editUrl:"https://github.com/remirror/remirror/edit/HEAD/docs/../docs/contributing.md",version:"current",sidebar:"someSidebar"},l=[{value:"Setup",id:"setup",children:[]},{value:"Project Structure",id:"project-structure",children:[]},{value:"Documentation",id:"documentation",children:[]},{value:"Testing",id:"testing",children:[]},{value:"Using Git",id:"using-git",children:[]},{value:"Development",id:"development",children:[{value:"General",id:"general",children:[]}]},{value:"Pull Request (PR) Process",id:"pull-request-pr-process",children:[]},{value:"Code style",id:"code-style",children:[]},{value:"Code of Conduct",id:"code-of-conduct",children:[{value:"Our Pledge",id:"our-pledge",children:[]},{value:"Our Standards",id:"our-standards",children:[]},{value:"Our Responsibilities",id:"our-responsibilities",children:[]},{value:"Scope",id:"scope",children:[]},{value:"Enforcement",id:"enforcement",children:[]},{value:"Attribution",id:"attribution",children:[]}]}],s={toc:l};function b(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"contributing"},"Contributing"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#contributing"}),"Contributing"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#setup"}),"Setup")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#project-structure"}),"Project Structure")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#documentation"}),"Documentation")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#testing"}),"Testing")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#using-git"}),"Using Git")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#development"}),"Development"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#general"}),"General")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#pull-request-pr-process"}),"Pull Request (PR) Process")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#code-style"}),"Code style")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#code-of-conduct"}),"Code of Conduct"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#our-pledge"}),"Our Pledge")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#our-standards"}),"Our Standards")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#our-responsibilities"}),"Our Responsibilities")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#scope"}),"Scope")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#enforcement"}),"Enforcement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#attribution"}),"Attribution"))))))),Object(r.b)("h2",{id:"setup"},"Setup"),Object(r.b)("p",null,"Fork ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/remirror/template"}),"this repository"),", clone your fork and add this repository as the upstream remote."),Object(r.b)("p",null,"You will need to have ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://pnpm.js.org"}),Object(r.b)("inlineCode",{parentName:"a"},"pnpm"))," installed so make sure you follow the\ninstallation ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://pnpm.js.org/en/installation"}),"instructions"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git clone <<FORKED_REPO_URL>>\ncd template\ngit remote add upstream https://github.com/remirror/template\npnpm install\n\n# Checkout a branch and start working on it\ngit checkout -b BRANCH_NAME\n")),Object(r.b)("p",null,"If you already have a previous version of the repository checked out then make sure to clean your\n",Object(r.b)("inlineCode",{parentName:"p"},"node_modules")," by running the following command before installation."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"pnpm clean:all\npnpm install\n\n# An alternative which combines these to commands\npnpm refresh\n")),Object(r.b)("h2",{id:"project-structure"},"Project Structure"),Object(r.b)("p",null,"The number of files in the root directory is deliberately as minimal as possible. This is achieved\nby moving all configuration files to the ",Object(r.b)("inlineCode",{parentName:"p"},"support/root")," folder. Whenever you run ",Object(r.b)("inlineCode",{parentName:"p"},"pnpm install"),"\nthese files are symlinked to the root directory."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},".github")," - The ",Object(r.b)("inlineCode",{parentName:"li"},"GitHub")," specific configuration for workflows, issue templates and pull request\ntemplates."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"docs")," - The documentation for this project."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"packages")," - The packages provided by this project. Within this folder there are top level\npackages and scoped packages within the ",Object(r.b)("inlineCode",{parentName:"li"},"packages/@*/*")," folders."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"support")," - This is the package that provides the configuration files, the website, and many other\nfolders. Each directory includes a readme file that explains it's functionality. Take a\n",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/remirror/template/tree/HEAD/support"}),"look"),".")),Object(r.b)("h2",{id:"documentation"},"Documentation"),Object(r.b)("p",null,"Documentation is located within the ",Object(r.b)("inlineCode",{parentName:"p"},"docs")," folder."),Object(r.b)("br",null),Object(r.b)("h2",{id:"testing"},"Testing"),Object(r.b)("p",null,"Unit tests can be run with the following commands."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"pnpm test # Unit Test\npnpm test:watch # Test changed files since the last commit\n")),Object(r.b)("p",null,"Always create your tests inside of a ",Object(r.b)("inlineCode",{parentName:"p"},"__tests__/")," sub-folder."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"For naming conventions, use the following.")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Unit tests: ",Object(r.b)("inlineCode",{parentName:"li"},"*.spec.ts(x)"))),Object(r.b)("br",null),Object(r.b)("h2",{id:"using-git"},"Using Git"),Object(r.b)("p",null,"I recommend that while working on your code you commit early and often. You won't be judged. All\nworked submitted in a pull request (see following section) will be squashed into one commit before\nmerging (unless it makes sense to keep the commits as separate items)."),Object(r.b)("p",null,"This project has support for git hooks via ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/typicode/husky"}),"husky"),". These hooks help keep the code base quality high\nby running checks:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Before each commit (lint and test changed files)."),Object(r.b)("li",{parentName:"ul"},"Before each push (lint, typecheck and test).")),Object(r.b)("p",null,"By default these checks are ",Object(r.b)("strong",{parentName:"p"},"not")," run automatically. To enable automatic pre-commit and pre-push\nhooks use the following command:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"pnpm checks:enable\n")),Object(r.b)("p",null,"To stop pre-commit / pre-push checks run:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"pnpm checks:disable\n")),Object(r.b)("br",null),Object(r.b)("h2",{id:"development"},"Development"),Object(r.b)("p",null,"If you're modifying a package and import helpers from another packages in the monorepo, ensure that\nthe other package is referenced in the referring package's ",Object(r.b)("inlineCode",{parentName:"p"},"package.json")," file."),Object(r.b)("h3",{id:"general"},"General"),Object(r.b)("p",null,"This project uses ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/preconstruct/preconstruct"}),Object(r.b)("inlineCode",{parentName:"a"},"preconstruct"))," to manage builds.\nEach time the project is installed ",Object(r.b)("inlineCode",{parentName:"p"},"preconstruct dev")," is run which automatically sets the dist\nfolder with entry points mapping to the source files of the package. This is really useful for\ndevelopment and except for one exception when working on the playground is all you need."),Object(r.b)("br",null),Object(r.b)("h2",{id:"pull-request-pr-process"},"Pull Request (PR) Process"),Object(r.b)("p",null,"Once your work is complete you'll want to create a Pull Request to share all that goodness with the\nrest of us."),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Create a ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://help.github.com/en/articles/creating-a-pull-request"}),"pull request")," using the\ngithub interface. The template will automatically populate for you."),Object(r.b)("li",{parentName:"ol"},"Add a description and reference the issue this pull request addresses where applicable. The\ndescription will be used as the body of the git commit message since all pull request are\nsquashed down into one commit before merging."),Object(r.b)("li",{parentName:"ol"},"Tick off all relevant check boxes by placing an x between the square brackets i.e. ",Object(r.b)("inlineCode",{parentName:"li"},"[ ]")," to\n",Object(r.b)("inlineCode",{parentName:"li"},"[x]"),"."),Object(r.b)("li",{parentName:"ol"},"Please add a screenshot where the change is related to the user interface or design. It makes it\nso much easier to grasp the intentions of your work. You can use your favourite GIF screenshare\ntool for creating animated screenshots."),Object(r.b)("li",{parentName:"ol"},"Once submitted the PR will be addressed at our earliest convenience.")),Object(r.b)("br",null),Object(r.b)("h2",{id:"code-style"},"Code style"),Object(r.b)("p",null,"Over time this project has accumulated quite an active set of lint rules."),Object(r.b)("p",null,"The following are some personal preferences for coding style."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Functions with more than two arguments should condense these arguments into a parameter object."),Object(r.b)("li",{parentName:"ul"},"Comment everything. Even if the comment is just to say, ",Object(r.b)("inlineCode",{parentName:"li"},"I have no idea what I'm doing"),", there is\na lot of information in that comment."),Object(r.b)("li",{parentName:"ul"},"Choose simplicity over performance. Performance is abstract and it's often better to start with a\nsimple implementation that can be made more performant, than something that's complex from day\none."),Object(r.b)("li",{parentName:"ul"},"Use ",Object(r.b)("inlineCode",{parentName:"li"},"const")," ",Object(r.b)("strong",{parentName:"li"},"Arrow Functions")," when declaring components.")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),"const MyComponent = () => {\n  return <div />;\n};\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Use ",Object(r.b)("strong",{parentName:"li"},"Function Declarations")," when creating top level functions.")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"// \u2705 - GOOD\nfunction doSomething(something: string) {\n  return `Cannot do ${something}`;\n}\n\n// \u274c - BAD\nconst doSomething = (something: string) => {\n  return `Cannot do ${something}`;\n};\n")),Object(r.b)("br",null),Object(r.b)("h2",{id:"code-of-conduct"},"Code of Conduct"),Object(r.b)("br",null),Object(r.b)("h3",{id:"our-pledge"},"Our Pledge"),Object(r.b)("p",null,"In the interest of fostering an open and welcoming environment, we as contributors and maintainers\npledge to making participation in our project and our community a harassment-free experience for\neveryone, regardless of age, body size, disability, ethnicity, gender identity and expression, level\nof experience, nationality, personal appearance, race, religion, or sexual identity and orientation."),Object(r.b)("h3",{id:"our-standards"},"Our Standards"),Object(r.b)("p",null,"Examples of behavior that contributes to creating a positive environment include:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Using welcoming and inclusive language"),Object(r.b)("li",{parentName:"ul"},"Being respectful of differing viewpoints and experiences"),Object(r.b)("li",{parentName:"ul"},"Gracefully accepting constructive criticism"),Object(r.b)("li",{parentName:"ul"},"Focusing on what is best for the community"),Object(r.b)("li",{parentName:"ul"},"Showing empathy towards other community members")),Object(r.b)("p",null,"Examples of unacceptable behavior by participants include:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The use of sexualized language or imagery and unwelcome sexual attention or advances"),Object(r.b)("li",{parentName:"ul"},"Trolling, insulting/derogatory comments, and personal or political attacks"),Object(r.b)("li",{parentName:"ul"},"Public or private harassment"),Object(r.b)("li",{parentName:"ul"},"Publishing others' private information, such as a physical or electronic address, without explicit\npermission"),Object(r.b)("li",{parentName:"ul"},"Other conduct which could reasonably be considered inappropriate in a professional setting")),Object(r.b)("h3",{id:"our-responsibilities"},"Our Responsibilities"),Object(r.b)("p",null,"Project maintainers are responsible for clarifying the standards of acceptable behavior and are\nexpected to take appropriate and fair corrective action in response to any instances of unacceptable\nbehavior."),Object(r.b)("p",null,"Project maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or\nto ban temporarily or permanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful."),Object(r.b)("h3",{id:"scope"},"Scope"),Object(r.b)("p",null,"This Code of Conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community. Examples of representing a project or community include\nusing an official project e-mail address, posting via an official social media account, or acting as\nan appointed representative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers."),Object(r.b)("h3",{id:"enforcement"},"Enforcement"),Object(r.b)("p",null,"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting\nthe project team at ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"mailto:help@kickjump.co."}),"help@kickjump.co.")," All complaints will be reviewed and investigated and will\nresult in a response that is deemed necessary and appropriate to the circumstances. The project team\nis obligated to maintain confidentiality with regard to the reporter of an incident. Further details\nof specific enforcement policies may be posted separately."),Object(r.b)("p",null,"Project maintainers who do not follow or enforce the Code of Conduct in good faith may face\ntemporary or permanent repercussions as determined by other members of the project's leadership."),Object(r.b)("h3",{id:"attribution"},"Attribution"),Object(r.b)("p",null,"This Code of Conduct is adapted from the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"http://contributor-covenant.org"}),"Contributor Covenant"),", version 1.4, available at\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"http://contributor-covenant.org/version/1/4/"}),"http://contributor-covenant.org/version/1/4")))}b.isMDXComponent=!0}}]);